create table if not exists user_account
(
    id bigint generated by default as identity primary key,
    email     varchar(254) not null CHECK (char_length(email) >= 6),
    name     varchar(250) not null CHECK (char_length(name) >= 2),
    unique (email),
    unique (name)
);
create table if not exists post
(
    id bigint generated by default as identity primary key,
    title     varchar(100) not null CHECK (char_length(title) >= 1),
    image bytea,
    text     varchar(2000) not null CHECK (char_length(text) >= 1),
    created_date timestamp not null,
     author_id bigint not null,
      constraint fk_post_author_id
                    foreign key (author_id)
                    references user_account (id) ON DELETE CASCADE
);

create table if not exists comment
(
    id bigint generated by default as identity primary key,
    text varchar(2000) not null,
    post_id bigint not null,
    author_id bigint not null,
    created_date    timestamp not null,
    constraint fk_comment_author_id
           foreign key (author_id)
           references user_account (id) ON DELETE CASCADE,
    constraint fk_comment_post_id
           foreign key (post_id)
           references post (id)
);

create table if not exists "post_reaction"
(
    id bigint generated by default as identity primary key,
    post_id     bigint not null,
  --  user_id    bigint not null,
    created_date timestamp not null,
    reaction_type VARCHAR(10) not null CHECK (reaction_type IN ('LIKE')),
    constraint fk_post_reaction_post_id
       foreign key (post_id)
      references post (id) ON DELETE CASCADE
   -- constraint fk_post_reaction_user_id
      --foreign key (user_id)
     -- references user_account(id) ON DELETE CASCADE
   --   UNIQUE (post_id, user_id)
);